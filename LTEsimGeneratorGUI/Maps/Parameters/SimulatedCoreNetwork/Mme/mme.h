#ifndef MME_H
#define MME_H
#include <QString>
#include <QList>
class Mme
{
public:
    Mme();
    ~Mme();
    QString getMme_names();
    QString getMme_tais();
    QString getMmes();
    QString getMme_s1ap_uris();
    QString getS1ap_pluginFilterPath();
    bool getSimulate_core();

    void setMme_names(QString mme_n);
    void setMme_tais(QString mme_t);
    void setMmes(QString mmes);
    void setMme_s1ap_uris(QString s1ap_uris);
    void setS1ap_pluginFilterPath(QString s1ap_plugin);
    void setSimulate_core(bool sc);


    QString getPaging_generator_names();
    void setPaging_generator_names(QString value);

    QString getImsi_ranges();
    void setImsi_ranges(QString value);

    QString getMme_codes();
    void setMme_codes(QString value);

    QString getUe_paging_identity();
    void setUe_paging_identity(QString value);

    QString getPaging_s1ap_uris();
    void setPaging_s1ap_uris(QString value);

    bool getS1ap_checkASN1_constraints() const;
    void setS1ap_checkASN1_constraints(bool value);

    bool getBundle_paging() const;
    void setBundle_paging(bool value);

    bool getGenerate_pagings() const;
    void setGenerate_pagings(bool value);

    QString getGenerators() const;
    void setGenerators(QString value);

    void resetParams();
private:
    bool simulate_core;     // Set to true if simulated core is used in the configuration
    QString mme_names;      // Name of the MME component
    QString mme_tais;       // MME tracking area identity value
    int mmes;               // Number of MMEs (used in multiple MME configuration)

    // The IP addresses must be available on the LTEsim server and reachable from the eNB CP interface
    QString mme_s1ap_uris;
    QString s1ap_pluginFilterPath;

    //Retrieve default parameters for Paging generator.
    bool generate_pagings;              //Set to true if paging generators are used in the configuration.
    int generators;                     //Number of paging generators
    QString paging_generator_names;     //Name of the paging generators
    QString imsi_ranges;                //The IMSI range which pagings are generated by each generator.

    QString mme_codes;                  //Used to generate GUMMEI
    QString ue_paging_identity;         //Can be IMSI or STMSI
    QString paging_s1ap_uris;           //The IP addresses must be available on the LTEsim server and reachable from the eNB CP interface

    bool s1ap_checkASN1_constraints;    //Set constraint checks to true to get info of broken ASN.1 messages
    bool bundle_paging;                 //Set constraint check to true to turn paging bundle.

    void openFile();
    QString searchParameter(QString name);
    QString searchDefaultParameter(QString name);
    void setMmeParameters();
    void setPagingParameters();
    QList<QString> fileParameters;
    bool toBool(QString t);
};

#endif // MME_H
