#include "mmeform.h"
#include "ui_mmeform.h"
#include <Maps/Parameters/MapWindow/mapwindow.h>
MmeForm::MmeForm(QWidget *parent) :
    QWidget(parent),
    ui(new Ui::MmeForm)
{
    ui->setupUi(this);
    this->setWindowTitle("MME settings");
    this->ui->lblMme_names->setToolTip("Name of the MME component e.g. \"mme1\"");
    this->ui->lblMme_tais->setToolTip("MME tracking area identity value e.g. \"62F2281200\"");
    this->ui->lblMmes->setToolTip("Number of MMEs (used in multiple MME configuration) ");
    this->ui->lblMme_s1ap_uris->setToolTip("The IP addresses must be available on the LTEsim server and reachable from the eNB CP interface e.g.\"sctp://127.0.0.1:36412\"");
    this->ui->lbl_Mme_s1ap_pluginFilterPath->setToolTip("Set the filter path e.g. \"/etc/alternatives/ltesim-root/ltesim/internal\"");
    this->ui->lbl_2->setToolTip("Number of paging generators");
    this->ui->lbl_3->setToolTip("Name of the paging generators e.g. \"pagings1\",\"pagings2\",\"pagings3\" ");
    this->ui->lbl_5->setToolTip("The IMSI range which pagings are generated by each generator e.g. \"100000+100\",\"200000+100\",\"300000+100\"");
    this->ui->lbl_7->setToolTip("Used to generate GUMMEI e.g. \"AA\", \"AB\", \"AC\"");
    this->ui->lbl_6->setToolTip("Can be IMSI or STMSI e.g. \"IMSI\"");
    this->ui->lbl_4->setToolTip("The IP addresses must be available on the LTEsim server and reachable from the eNB CP interface, e.g. \"sctp://127.0.1.1:36412\"");
}



MmeForm::~MmeForm()
{
    delete ui;
}

void MmeForm::setDefaultParameters()
{
    this->ui->tetMme_names->setText(mmeSettings.name);
    this->ui->tetMme_tais->setText(mmeSettings.tais);
    this->ui->tetMme_s1ap_uris->setText(mmeSettings.uris);
    this->ui->tetS1ap_pluginFilterPath->setText(mmeSettings.pluginFilterPath);
    this->ui->tet_generators->setText(QString::number(pagingSettings.generators));
    QString pagingNames;
    for (QString name:pagingSettings.names) {
        pagingNames+=(name+",");
    }
    this->ui->tet_paging_generator_names->setText(pagingNames);
    QString pagingRanges;
    for (QString range:pagingSettings.imsiRanges) {
        pagingRanges+=(range+",");
    }
    this->ui->tet_imsi_ranges->setText(pagingRanges);
    this->ui->tet_ue_paging_identity->setText(pagingSettings.uePagingIdentity);
    QString pagingUris;
    for (QString ur:pagingSettings.pagingSlapUris) {
        pagingUris+=(ur+",");
    }
    this->ui->tet_paging_s1ap_uris->setText(pagingUris);

}
void MmeForm::loadAndSpawn(const MmeSettings &mmeSettings, const PagingSettings &pagingSettings, const QString &projectName){
    this->mmeSettings=mmeSettings;
    this->pagingSettings=pagingSettings;
    this->projectName=projectName;
    this->setDefaultParameters();
    this->show();
}


void MmeForm::on_buttonBox_accepted()
{
    setMmeChanges();
    setPagingChanges();
    msg.setText("Changes has been succesfully approved ");
    msg.exec();
    this->close();
}


void MmeForm::on_buttonBox_rejected()
{
    this->close();
}


void MmeForm::on_pbReset_clicked()
{
    setDefaultParameters();
}

void MmeForm::setMmeChanges(){

    mmeSettings.name = this->ui->tetMme_names->text();
    mmeSettings.tais=this->ui->tetMme_tais->text();
    mmeSettings.uris=this->ui->tetMme_s1ap_uris->text();
    mmeSettings.pluginFilterPath=this->ui->tetS1ap_pluginFilterPath->text();
    emit updateMme(mmeSettings,projectName);
}
void MmeForm::setPagingChanges(){
    pagingSettings.generators = this->ui->tet_generators->text().toInt();
    pagingSettings.names = this->ui->tet_paging_generator_names->text().split(",");
    pagingSettings.imsiRanges = this->ui->tet_imsi_ranges->text().split(",");
    if (this->ui->tet_ue_paging_identity->text() == "IMSI") {
        pagingSettings.uePagingIdentity = "IMSI";
    }
    else if (this->ui->tet_ue_paging_identity->text() == "STMSI") {
        pagingSettings.uePagingIdentity = "STMSI";
    }
    pagingSettings.pagingSlapUris = this->ui->tet_paging_s1ap_uris->text().split(",");
    emit updatePaging(pagingSettings,projectName);

}
